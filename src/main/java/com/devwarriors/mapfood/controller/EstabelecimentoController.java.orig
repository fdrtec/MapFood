package com.devwarriors.mapfood.controller;

<<<<<<< HEAD
import com.devwarriors.mapfood.model.Estabelecimento;
import com.devwarriors.mapfood.service.EstabelecimentoService;
import org.springframework.beans.factory.annotation.Autowired;
=======
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.format.annotation.DateTimeFormat;
>>>>>>> origin
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

<<<<<<< HEAD
import java.util.List;

=======
import com.devwarriors.mapfood.model.Estabelecimento;
import com.devwarriors.mapfood.model.Relatorio;
import com.devwarriors.mapfood.service.EstabelecimentoService;

import java.time.LocalDate;
>>>>>>> origin

@RestController
public class EstabelecimentoController {

    @Autowired
    private EstabelecimentoService estabelecimentoService;

<<<<<<< HEAD
    @GetMapping("/estabelecimentos")
    public ResponseEntity<List<Estabelecimento>>getEstabelecimentos(){
        return ResponseEntity.ok((estabelecimentoService.getEstabelecimentos()));
    }

    //Postman: localhost:8080/estabelecimentos/proximidade/por-cliente/1?raio=5000
    @GetMapping("/estabelecimentos/proximidade/por-cliente/{clienteId}")
    public ResponseEntity<List<Estabelecimento>>getEstabelecimentosPorLocalizacao
            (@PathVariable Integer clienteId, @RequestParam Double raio){
        return ResponseEntity.ok((estabelecimentoService.getEstabelecimentosPorLocalizacao(clienteId, raio)));
=======
    @GetMapping("estabelecimentos/{id}/relatorio")
    public ResponseEntity<Relatorio> geraRelatorio(@PathVariable("id") String id,
            @RequestParam @DateTimeFormat(pattern = "dd/MM/yyyy") LocalDate dataInicial,
            @RequestParam @DateTimeFormat(pattern = "dd/MM/yyyy") LocalDate dataFinal) {

            Estabelecimento estabelecimento = estabelecimentoService.buscaEstabelecimentoPorId(id);
            Relatorio relatorio = estabelecimentoService.geraRelatorio(id, dataInicial, dataFinal);

            return ResponseEntity.ok(relatorio);

>>>>>>> origin
    }
}
